worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # UI Server (port 3002)
    server {
        listen 3002;
        server_name localhost;
        root /usr/share/nginx/html/ui;
        index index.html;

        # Handle SPA routing
        location / {
            try_files $uri $uri.html $uri/ /index.html;
        }

        # Static assets
        location /static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # API proxy to backend
        location /api/ {
            proxy_pass http://localhost:4002/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Docs Server (port 3005)
    server {
        listen 3005;
        server_name localhost;
        root /usr/share/nginx/html/docs;
        index index.html;

        # Handle Next.js static export routing
        location / {
            try_files $uri $uri.html $uri/ /index.html;
        }

        # Static assets
        location /_next/static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
